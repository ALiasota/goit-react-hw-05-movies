{"version":3,"file":"static/js/319.d1df2df2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","services/films-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back\":\"MovieDetailsPage_back__B440W\",\"filmCont\":\"MovieDetailsPage_filmCont__h6TJ7\",\"thumb\":\"MovieDetailsPage_thumb__kEHtl\",\"picture\":\"MovieDetailsPage_picture__N1MEC\",\"additional\":\"MovieDetailsPage_additional__BCHVj\"};","import { useState, useEffect, lazy, Suspense } from \"react\";\nimport { movieById } from '../../services/films-api';\nimport { useParams, useNavigate, Link, Routes, Route } from 'react-router-dom';\nimport styles from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('../Cast'));\nconst Reviews = lazy(() => import('../Reviews'));\n\nexport default function MovieDetailsPage() {\n    \n    const { movieId } = useParams();\n    let navigate = useNavigate();\n  function handleClick() {\n    navigate(-1);\n  };\n    \n    const [movie, setMovie] = useState(null);\n    useEffect(() => {\n        movieById(movieId).then(setMovie);\n    }, [movieId]);\n    if (movie) {\n        const { poster_path, genres, original_title, overview, release_date, vote_average } = movie;\n        const picturePath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    return (   \n   \n        <>\n            <button  className={styles.back} onClick={handleClick}>Go back</button>\n            \n            <div className={styles.filmCont}>\n                <div className={styles.thumb}>\n                    <img className={styles.picture} src={picturePath}  alt={original_title} />\n                </div>\n                <div>\n                    <h1>{original_title} ({release_date.split('-')[0]})</h1>\n                <p>User Score: {vote_average * 10}%</p>\n                <h3>Overview</h3>\n                <p>{ overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(({ name }) => <span key={name}>{name } </span> )}</p>\n                </div>\n                \n            </div>\n            <div className={styles.additional}>\n                <p>Additional information</p>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">Reviews</Link>\n                    </li>\n                </ul>\n            </div>\n            <Suspense fallback={<h1>Loading</h1>}>\n                <Routes>\n                    <Route path=\"cast\" element={<Cast  id={movieId} />} />\n                    <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n                </Routes>\n            </Suspense>\n        </>\n    \n  );\n    }\n   \n}","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nconst KEY = '067f291d21ed1c6d30bd9ade17d843cc';\n\nexport async function trendMovies() {\n    const params = {\n      api_key: KEY,         \n    };\n    try{\n        const response = await axios('trending/movie/day', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function searchMovie( searchQuery = '') {\n    const params = {\n      api_key: KEY,\n      query: searchQuery          \n    };\n    try{\n        const response = await axios('search/movie', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  export async function movieById( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieCredits( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/credits`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieReviews( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/reviews`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  \n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","navigate","useNavigate","useState","movie","setMovie","useEffect","movieById","then","poster_path","genres","original_title","overview","release_date","vote_average","picturePath","className","styles","onClick","src","alt","split","map","name","to","Suspense","fallback","path","element","id","axios","KEY","trendMovies","params","api_key","response","data","console","error","searchMovie","searchQuery","query","movieCredits","movieReviews"],"sourceRoot":""}