{"version":3,"file":"static/js/37.d6f0308f.chunk.js","mappings":"wOAKe,SAASA,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OACI,iCACA,kBACAC,MAAO,CAACC,OAAQ,IAChBC,UAAU,cACVC,SAjBiB,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAcV,EAAMW,OACP,KAAhBD,GAIHE,EAAAA,EAAAA,IAAYF,GAAaG,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAeX,EAASW,MAHlDC,MAAM,UAUV,WAKI,kBACAC,KAAK,OACLC,KAAK,OACLC,KAAK,KACLC,aAAa,MACbC,SAfa,SAAAZ,GACjBP,EAASO,EAAEa,cAAcC,WAgBrB,mBAAQlB,MAAO,CAACC,OAAQ,GAAIkB,OAAQ,WAAYP,KAAK,SAArD,uBAEHd,IACG,wBACKA,EAAMsB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,eAAN,OACV,yBACG,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAApB,SAA2BC,KADrBD,a,0JCtC1BG,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EAAS,CACbC,QAASH,GAFR,kBAKwBD,GAAAA,CAAM,qBAAsB,CAACG,OAAAA,IALrD,cAKOE,EALP,yBAMQA,EAASC,MANjB,gCAQCC,QAAQC,MAAR,MARD,gFAYE,SAAexB,IAAtB,4CAAO,OAAP,oBAAO,2GAA4BF,EAA5B,+BAA0C,GACzCqB,EAAS,CACbC,QAASH,EACT7B,MAAOU,GAHJ,kBAMsBkB,GAAAA,CAAM,eAAgB,CAACG,OAAAA,IAN7C,cAMKE,EANL,yBAOMA,EAASC,MAPf,gCASDC,QAAQC,MAAR,MATC,iFAaA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA0BZ,EAA1B,+BAA+B,GAC9BM,EAAS,CACbC,QAASH,GAFN,kBAKsBD,GAAAA,CAAM,SAAD,OAAUH,GAAM,CAACM,OAAAA,IAL5C,cAKKE,EALL,yBAMMA,EAASC,MANf,gCAQDC,QAAQC,MAAR,MARC","sources":["components/MoviesPage/MoviesPage.js","services/films-api.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { searchMovie } from \"../../services/films-api\";\n\n\nexport default function MoviesPage() {\n    const [query, setQuery] = useState('');\n    const [films, setFilms] = useState([]);\n    const handleSubmit = e => {\n        e.preventDefault();\n        const searchQuery = query.trim();\n        if(searchQuery === '') {\n            alert('Empty');\n            return;\n        }\n        searchMovie(searchQuery).then(({results}) => setFilms(results));\n    }\n    const handleChange = e => {\n        setQuery(e.currentTarget.value);\n    }\n    return(\n        <>\n        <form \n        style={{margin: 20}} \n        className=\"search-form\"\n        onSubmit={handleSubmit}\n        >\n            <input  \n            type=\"text\" \n            name=\"find\" \n            size=\"20\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            ></input>\n            <button style={{margin: 10, cursor: 'pointer'}} type=\"submit\">Search</button>\n        </form>\n        {films &&(\n            <ul>\n                {films.map(({id, original_title}) => \n                (<li key={id}>\n                    <Link to={`movies/${id}`}>{original_title}</Link>\n                    </li>))} \n                    </ul>\n        )}\n        </>\n    )\n}","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nconst KEY = '067f291d21ed1c6d30bd9ade17d843cc';\n\nexport async function trendMovies() {\n    const params = {\n      api_key: KEY,         \n    };\n    try{\n        const response = await axios('trending/movie/day', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function searchMovie( searchQuery = '') {\n    const params = {\n      api_key: KEY,\n      query: searchQuery          \n    };\n    try{\n        const response = await axios('search/movie', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  export async function movieById( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieCredits( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/credits`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieReviews( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/reviews`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  \n"],"names":["MoviesPage","useState","query","setQuery","films","setFilms","style","margin","className","onSubmit","e","preventDefault","searchQuery","trim","searchMovie","then","results","alert","type","name","size","autoComplete","onChange","currentTarget","value","cursor","map","id","original_title","to","axios","KEY","trendMovies","params","api_key","response","data","console","error","movieById"],"sourceRoot":""}